//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MinerWars.AppCode.Networking.SectorService {
    using System.Runtime.Serialization;
    using System;
    using VRageMath = MinerWarsMath;
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportInfo", Namespace="http://schemas.datacontract.org/2004/07/SectorServerLIB.SectorService")]
    [System.SerializableAttribute()]
    public partial struct ExportInfo : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier SectorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier SectorId {
            get {
                return this.SectorIdField;
            }
            set {
                if ((this.SectorIdField.Equals(value) != true)) {
                    this.SectorIdField = value;
                    this.RaisePropertyChanged("SectorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyUserInfo", Namespace="http://schemas.datacontract.org/2004/07/SectorServerLIB.SectorService")]
    [System.SerializableAttribute()]
    public partial class MyUserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinerWars.AppCode.Networking.SectorService.MyAdditionalUserInfo AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanAccess25DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanAccessDemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanAccessEditorForMMOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanAccessEditorForStoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanAccessMMOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanSaveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanUseCheatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAnyCheckpointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinerWars.AppCode.Networking.SectorService.MyAdditionalUserInfo AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanAccess25D {
            get {
                return this.CanAccess25DField;
            }
            set {
                if ((this.CanAccess25DField.Equals(value) != true)) {
                    this.CanAccess25DField = value;
                    this.RaisePropertyChanged("CanAccess25D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanAccessDemo {
            get {
                return this.CanAccessDemoField;
            }
            set {
                if ((this.CanAccessDemoField.Equals(value) != true)) {
                    this.CanAccessDemoField = value;
                    this.RaisePropertyChanged("CanAccessDemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanAccessEditorForMMO {
            get {
                return this.CanAccessEditorForMMOField;
            }
            set {
                if ((this.CanAccessEditorForMMOField.Equals(value) != true)) {
                    this.CanAccessEditorForMMOField = value;
                    this.RaisePropertyChanged("CanAccessEditorForMMO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanAccessEditorForStory {
            get {
                return this.CanAccessEditorForStoryField;
            }
            set {
                if ((this.CanAccessEditorForStoryField.Equals(value) != true)) {
                    this.CanAccessEditorForStoryField = value;
                    this.RaisePropertyChanged("CanAccessEditorForStory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanAccessMMO {
            get {
                return this.CanAccessMMOField;
            }
            set {
                if ((this.CanAccessMMOField.Equals(value) != true)) {
                    this.CanAccessMMOField = value;
                    this.RaisePropertyChanged("CanAccessMMO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanSave {
            get {
                return this.CanSaveField;
            }
            set {
                if ((this.CanSaveField.Equals(value) != true)) {
                    this.CanSaveField = value;
                    this.RaisePropertyChanged("CanSave");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanUseCheats {
            get {
                return this.CanUseCheatsField;
            }
            set {
                if ((this.CanUseCheatsField.Equals(value) != true)) {
                    this.CanUseCheatsField = value;
                    this.RaisePropertyChanged("CanUseCheats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAnyCheckpoints {
            get {
                return this.HasAnyCheckpointsField;
            }
            set {
                if ((this.HasAnyCheckpointsField.Equals(value) != true)) {
                    this.HasAnyCheckpointsField = value;
                    this.RaisePropertyChanged("HasAnyCheckpoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyAdditionalUserInfo", Namespace="http://schemas.datacontract.org/2004/07/SectorServerLIB.SectorService")]
    [System.SerializableAttribute()]
    public partial class MyAdditionalUserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AffiliateUniqueClicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AffiliateUrlRegistrationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ContributionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForumPostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastGameLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastWebsiteLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float QualificationPoinstsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegisteredField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AffiliateUniqueClicks {
            get {
                return this.AffiliateUniqueClicksField;
            }
            set {
                if ((this.AffiliateUniqueClicksField.Equals(value) != true)) {
                    this.AffiliateUniqueClicksField = value;
                    this.RaisePropertyChanged("AffiliateUniqueClicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AffiliateUrlRegistrations {
            get {
                return this.AffiliateUrlRegistrationsField;
            }
            set {
                if ((this.AffiliateUrlRegistrationsField.Equals(value) != true)) {
                    this.AffiliateUrlRegistrationsField = value;
                    this.RaisePropertyChanged("AffiliateUrlRegistrations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Contributions {
            get {
                return this.ContributionsField;
            }
            set {
                if ((this.ContributionsField.Equals(value) != true)) {
                    this.ContributionsField = value;
                    this.RaisePropertyChanged("Contributions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForumPosts {
            get {
                return this.ForumPostsField;
            }
            set {
                if ((this.ForumPostsField.Equals(value) != true)) {
                    this.ForumPostsField = value;
                    this.RaisePropertyChanged("ForumPosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastGameLogin {
            get {
                return this.LastGameLoginField;
            }
            set {
                if ((this.LastGameLoginField.Equals(value) != true)) {
                    this.LastGameLoginField = value;
                    this.RaisePropertyChanged("LastGameLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastWebsiteLogin {
            get {
                return this.LastWebsiteLoginField;
            }
            set {
                if ((this.LastWebsiteLoginField.Equals(value) != true)) {
                    this.LastWebsiteLoginField = value;
                    this.RaisePropertyChanged("LastWebsiteLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float QualificationPoinsts {
            get {
                return this.QualificationPoinstsField;
            }
            set {
                if ((this.QualificationPoinstsField.Equals(value) != true)) {
                    this.QualificationPoinstsField = value;
                    this.RaisePropertyChanged("QualificationPoinsts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Registered {
            get {
                return this.RegisteredField;
            }
            set {
                if ((this.RegisteredField.Equals(value) != true)) {
                    this.RegisteredField = value;
                    this.RaisePropertyChanged("Registered");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AppCode.Networking.SectorService.IMySectorService", CallbackContract=typeof(MinerWars.AppCode.Networking.SectorService.IMySectorServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IMySectorService {
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/GetGameMoney", ReplyAction="http://tempuri.org/IMySectorService/GetGameMoneyResponse")]
        decimal GetGameMoney();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/GetGameMoney", ReplyAction="http://tempuri.org/IMySectorService/GetGameMoneyResponse")]
        System.IAsyncResult BeginGetGameMoney(System.AsyncCallback callback, object asyncState);
        
        decimal EndGetGameMoney(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/UpdateGameMoney", ReplyAction="http://tempuri.org/IMySectorService/UpdateGameMoneyResponse")]
        void UpdateGameMoney(decimal moneyAdded);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/UpdateGameMoney", ReplyAction="http://tempuri.org/IMySectorService/UpdateGameMoneyResponse")]
        System.IAsyncResult BeginUpdateGameMoney(decimal moneyAdded, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateGameMoney(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMySectorService/LoadExportInfo", ReplyAction="http://tempuri.org/IMySectorService/LoadExportInfoResponse")]
        System.Collections.Generic.List<MinerWars.AppCode.Networking.SectorService.ExportInfo> LoadExportInfo();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadExportInfo", ReplyAction="http://tempuri.org/IMySectorService/LoadExportInfoResponse")]
        System.IAsyncResult BeginLoadExportInfo(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<MinerWars.AppCode.Networking.SectorService.ExportInfo> EndLoadExportInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMySectorService/ExportGlobalData", ReplyAction="http://tempuri.org/IMySectorService/ExportGlobalDataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="globalData")]
        byte[] ExportGlobalData(out byte[] storyCheckpoint, out byte[] sandboxCheckpoint);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMySectorService/ExportGlobalData", ReplyAction="http://tempuri.org/IMySectorService/ExportGlobalDataResponse")]
        System.IAsyncResult BeginExportGlobalData(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="globalData")]
        byte[] EndExportGlobalData(out byte[] storyCheckpoint, out byte[] sandboxCheckpoint, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMySectorService/ExportSector", ReplyAction="http://tempuri.org/IMySectorService/ExportSectorResponse")]
        byte[] ExportSector(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMySectorService/ExportSector", ReplyAction="http://tempuri.org/IMySectorService/ExportSectorResponse")]
        System.IAsyncResult BeginExportSector(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType, System.AsyncCallback callback, object asyncState);
        
        byte[] EndExportSector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMySectorService/Login", ReplyAction="http://tempuri.org/IMySectorService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MinerWars.CommonLIB.AppCode.Networking.Services.MyVersionFault), Action="http://tempuri.org/IMySectorService/LoginMyVersionFaultFault", Name="MyVersionFault", Namespace="http://schemas.datacontract.org/2004/07/MinerWars.CommonLIB.AppCode.Networking.Se" +
            "rvices")]
        [System.ServiceModel.FaultContractAttribute(typeof(MinerWars.CommonLIB.AppCode.Networking.Services.MyAlreadyLoggedInFault), Action="http://tempuri.org/IMySectorService/LoginMyAlreadyLoggedInFaultFault", Name="MyAlreadyLoggedInFault", Namespace="http://schemas.datacontract.org/2004/07/MinerWars.CommonLIB.AppCode.Networking.Se" +
            "rvices")]
        MinerWars.AppCode.Networking.SectorService.MyUserInfo Login(int gameVersion);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMySectorService/Login", ReplyAction="http://tempuri.org/IMySectorService/LoginResponse")]
        System.IAsyncResult BeginLogin(int gameVersion, System.AsyncCallback callback, object asyncState);
        
        MinerWars.AppCode.Networking.SectorService.MyUserInfo EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="http://tempuri.org/IMySectorService/Logout", ReplyAction="http://tempuri.org/IMySectorService/LogoutResponse")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/Logout", ReplyAction="http://tempuri.org/IMySectorService/LogoutResponse")]
        System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState);
        
        void EndLogout(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadSectorIdentifiers", ReplyAction="http://tempuri.org/IMySectorService/LoadSectorIdentifiersResponse")]
        System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> LoadSectorIdentifiers(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadSectorIdentifiers", ReplyAction="http://tempuri.org/IMySectorService/LoadSectorIdentifiersResponse")]
        System.IAsyncResult BeginLoadSectorIdentifiers(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> EndLoadSectorIdentifiers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadUserSectorIdentifiers", ReplyAction="http://tempuri.org/IMySectorService/LoadUserSectorIdentifiersResponse")]
        System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> LoadUserSectorIdentifiers();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadUserSectorIdentifiers", ReplyAction="http://tempuri.org/IMySectorService/LoadUserSectorIdentifiersResponse")]
        System.IAsyncResult BeginLoadUserSectorIdentifiers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> EndLoadUserSectorIdentifiers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/SelectSandbox", ReplyAction="http://tempuri.org/IMySectorService/SelectSandboxResponse")]
        System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> SelectSandbox(out System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcUserDetail> userDetails, MinerWars.CommonLIB.AppCode.Networking.MyMwcSelectSectorRequestTypeEnum selectSandboxType, string findPlayerName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/SelectSandbox", ReplyAction="http://tempuri.org/IMySectorService/SelectSandboxResponse")]
        System.IAsyncResult BeginSelectSandbox(MinerWars.CommonLIB.AppCode.Networking.MyMwcSelectSectorRequestTypeEnum selectSandboxType, string findPlayerName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> EndSelectSandbox(out System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcUserDetail> userDetails, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadCheckpoint", ReplyAction="http://tempuri.org/IMySectorService/LoadCheckpointResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MinerWars.CommonLIB.AppCode.Networking.Services.MyCustomFault), Action="http://tempuri.org/IMySectorService/LoadCheckpointMyCustomFaultFault", Name="MyCustomFault", Namespace="http://schemas.datacontract.org/2004/07/MinerWars.CommonLIB.AppCode.Networking.Se" +
            "rvices")]
        byte[] LoadCheckpoint(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, MinerWars.CommonLIB.AppCode.Networking.MyMwcSessionStateEnum sessionStartType, System.Nullable<int> userId, System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> sectorPosition, string checkpointName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadCheckpoint", ReplyAction="http://tempuri.org/IMySectorService/LoadCheckpointResponse")]
        System.IAsyncResult BeginLoadCheckpoint(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, MinerWars.CommonLIB.AppCode.Networking.MyMwcSessionStateEnum sessionStartType, System.Nullable<int> userId, System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> sectorPosition, string checkpointName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadCheckpoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadObjectGroups", ReplyAction="http://tempuri.org/IMySectorService/LoadObjectGroupsResponse")]
        byte[] LoadObjectGroups(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadObjectGroups", ReplyAction="http://tempuri.org/IMySectorService/LoadObjectGroupsResponse")]
        System.IAsyncResult BeginLoadObjectGroups(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadObjectGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/SaveCheckpoint", ReplyAction="http://tempuri.org/IMySectorService/SaveCheckpointResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MinerWars.CommonLIB.AppCode.Networking.Services.MyCustomFault), Action="http://tempuri.org/IMySectorService/SaveCheckpointMyCustomFaultFault", Name="MyCustomFault", Namespace="http://schemas.datacontract.org/2004/07/MinerWars.CommonLIB.AppCode.Networking.Se" +
            "rvices")]
        void SaveCheckpoint(byte[] checkpoint, bool savePlayer);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/SaveCheckpoint", ReplyAction="http://tempuri.org/IMySectorService/SaveCheckpointResponse")]
        System.IAsyncResult BeginSaveCheckpoint(byte[] checkpoint, bool savePlayer, System.AsyncCallback callback, object asyncState);
        
        void EndSaveCheckpoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/TravelToSector", ReplyAction="http://tempuri.org/IMySectorService/TravelToSectorResponse")]
        byte[] TravelToSector(out VRageMath.Vector3 newShipPosition, MinerWars.CommonLIB.AppCode.Networking.MyMwcTravelTypeEnum travelType, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, VRageMath.Vector3 currentShipPosition, int currentSectorVersion);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/TravelToSector", ReplyAction="http://tempuri.org/IMySectorService/TravelToSectorResponse")]
        System.IAsyncResult BeginTravelToSector(MinerWars.CommonLIB.AppCode.Networking.MyMwcTravelTypeEnum travelType, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, VRageMath.Vector3 currentShipPosition, int currentSectorVersion, System.AsyncCallback callback, object asyncState);
        
        byte[] EndTravelToSector(out VRageMath.Vector3 newShipPosition, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LeaveSector", ReplyAction="http://tempuri.org/IMySectorService/LeaveSectorResponse")]
        void LeaveSector(MinerWars.CommonLIB.AppCode.Networking.MyMwcLeaveSectorReasonEnum reason);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LeaveSector", ReplyAction="http://tempuri.org/IMySectorService/LeaveSectorResponse")]
        System.IAsyncResult BeginLeaveSector(MinerWars.CommonLIB.AppCode.Networking.MyMwcLeaveSectorReasonEnum reason, System.AsyncCallback callback, object asyncState);
        
        void EndLeaveSector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadSectorObjects", ReplyAction="http://tempuri.org/IMySectorService/LoadSectorObjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MinerWars.CommonLIB.AppCode.Networking.Services.MyCustomFault), Action="http://tempuri.org/IMySectorService/LoadSectorObjectsMyCustomFaultFault", Name="MyCustomFault", Namespace="http://schemas.datacontract.org/2004/07/MinerWars.CommonLIB.AppCode.Networking.Se" +
            "rvices")]
        byte[] LoadSectorObjects(string playerName, string sectorName, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadSectorObjects", ReplyAction="http://tempuri.org/IMySectorService/LoadSectorObjectsResponse")]
        System.IAsyncResult BeginLoadSectorObjects(string playerName, string sectorName, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadSectorObjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMySectorService/CheckAlive", ReplyAction="http://tempuri.org/IMySectorService/CheckAliveResponse")]
        bool CheckAlive();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMySectorService/CheckAlive", ReplyAction="http://tempuri.org/IMySectorService/CheckAliveResponse")]
        System.IAsyncResult BeginCheckAlive(System.AsyncCallback callback, object asyncState);
        
        bool EndCheckAlive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMySectorService/GetActiveUsers", ReplyAction="http://tempuri.org/IMySectorService/GetActiveUsersResponse")]
        System.Collections.Generic.List<string> GetActiveUsers();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMySectorService/GetActiveUsers", ReplyAction="http://tempuri.org/IMySectorService/GetActiveUsersResponse")]
        System.IAsyncResult BeginGetActiveUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetActiveUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMySectorService/AnnounceShutdown", ReplyAction="http://tempuri.org/IMySectorService/AnnounceShutdownResponse")]
        int AnnounceShutdown(System.TimeSpan timeToShutdown, System.TimeSpan shutdownLength, string message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMySectorService/AnnounceShutdown", ReplyAction="http://tempuri.org/IMySectorService/AnnounceShutdownResponse")]
        System.IAsyncResult BeginAnnounceShutdown(System.TimeSpan timeToShutdown, System.TimeSpan shutdownLength, string message, System.AsyncCallback callback, object asyncState);
        
        int EndAnnounceShutdown(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/HarvestingFinished", ReplyAction="http://tempuri.org/IMySectorService/HarvestingFinishedResponse")]
        void HarvestingFinished(MinerWars.CommonLIB.AppCode.Networking.MyMwcVoxelMaterialsEnum materialEnum, byte voxelContentHarvested);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/HarvestingFinished", ReplyAction="http://tempuri.org/IMySectorService/HarvestingFinishedResponse")]
        System.IAsyncResult BeginHarvestingFinished(MinerWars.CommonLIB.AppCode.Networking.MyMwcVoxelMaterialsEnum materialEnum, byte voxelContentHarvested, System.AsyncCallback callback, object asyncState);
        
        void EndHarvestingFinished(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadSmallShipTemplates", ReplyAction="http://tempuri.org/IMySectorService/LoadSmallShipTemplatesResponse")]
        byte[] LoadSmallShipTemplates();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadSmallShipTemplates", ReplyAction="http://tempuri.org/IMySectorService/LoadSmallShipTemplatesResponse")]
        System.IAsyncResult BeginLoadSmallShipTemplates(System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadSmallShipTemplates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/SaveSmallShipTemplates", ReplyAction="http://tempuri.org/IMySectorService/SaveSmallShipTemplatesResponse")]
        void SaveSmallShipTemplates(byte[] smallShipTemplates);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/SaveSmallShipTemplates", ReplyAction="http://tempuri.org/IMySectorService/SaveSmallShipTemplatesResponse")]
        System.IAsyncResult BeginSaveSmallShipTemplates(byte[] smallShipTemplates, System.AsyncCallback callback, object asyncState);
        
        void EndSaveSmallShipTemplates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/NewGame", ReplyAction="http://tempuri.org/IMySectorService/NewGameResponse")]
        byte[] NewGame(System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> startSector);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/NewGame", ReplyAction="http://tempuri.org/IMySectorService/NewGameResponse")]
        System.IAsyncResult BeginNewGame(System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> startSector, System.AsyncCallback callback, object asyncState);
        
        byte[] EndNewGame(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadLastCheckpoint", ReplyAction="http://tempuri.org/IMySectorService/LoadLastCheckpointResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MinerWars.CommonLIB.AppCode.Networking.Services.MyCheckpointNotExistsFault), Action="http://tempuri.org/IMySectorService/LoadLastCheckpointMyCheckpointNotExistsFaultF" +
            "ault", Name="MyCheckpointNotExistsFault", Namespace="http://schemas.datacontract.org/2004/07/MinerWars.CommonLIB.AppCode.Networking.Se" +
            "rvices")]
        byte[] LoadLastCheckpoint();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadLastCheckpoint", ReplyAction="http://tempuri.org/IMySectorService/LoadLastCheckpointResponse")]
        System.IAsyncResult BeginLoadLastCheckpoint(System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadLastCheckpoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/SaveLastCheckpoint", ReplyAction="http://tempuri.org/IMySectorService/SaveLastCheckpointResponse")]
        void SaveLastCheckpoint(byte[] checkpointBuilder);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/SaveLastCheckpoint", ReplyAction="http://tempuri.org/IMySectorService/SaveLastCheckpointResponse")]
        System.IAsyncResult BeginSaveLastCheckpoint(byte[] checkpointBuilder, System.AsyncCallback callback, object asyncState);
        
        void EndSaveLastCheckpoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadSandbox", ReplyAction="http://tempuri.org/IMySectorService/LoadSandboxResponse")]
        byte[] LoadSandbox(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, System.Nullable<int> clientSectorVersion);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadSandbox", ReplyAction="http://tempuri.org/IMySectorService/LoadSandboxResponse")]
        System.IAsyncResult BeginLoadSandbox(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, System.Nullable<int> clientSectorVersion, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadSandbox(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadStoryEditor", ReplyAction="http://tempuri.org/IMySectorService/LoadStoryEditorResponse")]
        byte[] LoadStoryEditor(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadStoryEditor", ReplyAction="http://tempuri.org/IMySectorService/LoadStoryEditorResponse")]
        System.IAsyncResult BeginLoadStoryEditor(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadStoryEditor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/SaveStoryEditor", ReplyAction="http://tempuri.org/IMySectorService/SaveStoryEditorResponse")]
        void SaveStoryEditor(byte[] sectorObjectBuilder);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/SaveStoryEditor", ReplyAction="http://tempuri.org/IMySectorService/SaveStoryEditorResponse")]
        System.IAsyncResult BeginSaveStoryEditor(byte[] sectorObjectBuilder, System.AsyncCallback callback, object asyncState);
        
        void EndSaveStoryEditor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadSandboxEditor", ReplyAction="http://tempuri.org/IMySectorService/LoadSandboxEditorResponse")]
        byte[] LoadSandboxEditor(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadSandboxEditor", ReplyAction="http://tempuri.org/IMySectorService/LoadSandboxEditorResponse")]
        System.IAsyncResult BeginLoadSandboxEditor(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadSandboxEditor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/SaveSandboxEditor", ReplyAction="http://tempuri.org/IMySectorService/SaveSandboxEditorResponse")]
        void SaveSandboxEditor(byte[] sectorObjectBuilder);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/SaveSandboxEditor", ReplyAction="http://tempuri.org/IMySectorService/SaveSandboxEditorResponse")]
        System.IAsyncResult BeginSaveSandboxEditor(byte[] sectorObjectBuilder, System.AsyncCallback callback, object asyncState);
        
        void EndSaveSandboxEditor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadSector", ReplyAction="http://tempuri.org/IMySectorService/LoadSectorResponse")]
        byte[] LoadSector();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadSector", ReplyAction="http://tempuri.org/IMySectorService/LoadSectorResponse")]
        System.IAsyncResult BeginLoadSector(System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadSector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/Travel", ReplyAction="http://tempuri.org/IMySectorService/TravelResponse")]
        byte[] Travel(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, System.Nullable<int> clientSectorVersion);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/Travel", ReplyAction="http://tempuri.org/IMySectorService/TravelResponse")]
        System.IAsyncResult BeginTravel(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, System.Nullable<int> clientSectorVersion, System.AsyncCallback callback, object asyncState);
        
        byte[] EndTravel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMySectorService/LoadSectorGroups", ReplyAction="http://tempuri.org/IMySectorService/LoadSectorGroupsResponse")]
        byte[] LoadSectorGroups(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/LoadSectorGroups", ReplyAction="http://tempuri.org/IMySectorService/LoadSectorGroupsResponse")]
        System.IAsyncResult BeginLoadSectorGroups(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLoadSectorGroups(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMySectorServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMySectorService/NotifyShutdown")]
        void NotifyShutdown(System.TimeSpan shutdownIn, System.TimeSpan shutdownLength, string shutdownMessage);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IMySectorService/NotifyShutdown")]
        System.IAsyncResult BeginNotifyShutdown(System.TimeSpan shutdownIn, System.TimeSpan shutdownLength, string shutdownMessage, System.AsyncCallback callback, object asyncState);
        
        void EndNotifyShutdown(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMySectorServiceChannel : MinerWars.AppCode.Networking.SectorService.IMySectorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGameMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGameMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadExportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadExportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<MinerWars.AppCode.Networking.SectorService.ExportInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<MinerWars.AppCode.Networking.SectorService.ExportInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportGlobalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExportGlobalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] storyCheckpoint {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public byte[] sandboxCheckpoint {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExportSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MinerWars.AppCode.Networking.SectorService.MyUserInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MinerWars.AppCode.Networking.SectorService.MyUserInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadSectorIdentifiersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadSectorIdentifiersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadUserSectorIdentifiersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadUserSectorIdentifiersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectSandboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectSandboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcUserDetail> userDetails {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcUserDetail>)(this.results[0]));
            }
        }
        
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadCheckpointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadCheckpointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadObjectGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadObjectGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TravelToSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TravelToSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VRageMath.Vector3 newShipPosition {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VRageMath.Vector3)(this.results[0]));
            }
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadSectorObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadSectorObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckAliveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckAliveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetActiveUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetActiveUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnnounceShutdownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AnnounceShutdownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadSmallShipTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadSmallShipTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadLastCheckpointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadLastCheckpointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadSandboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadSandboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadStoryEditorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadStoryEditorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadSandboxEditorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadSandboxEditorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TravelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TravelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadSectorGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadSectorGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MySectorServiceClient : System.ServiceModel.DuplexClientBase<MinerWars.AppCode.Networking.SectorService.IMySectorService>, MinerWars.AppCode.Networking.SectorService.IMySectorService {
        
        private BeginOperationDelegate onBeginGetGameMoneyDelegate;
        
        private EndOperationDelegate onEndGetGameMoneyDelegate;
        
        private System.Threading.SendOrPostCallback onGetGameMoneyCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateGameMoneyDelegate;
        
        private EndOperationDelegate onEndUpdateGameMoneyDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateGameMoneyCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadExportInfoDelegate;
        
        private EndOperationDelegate onEndLoadExportInfoDelegate;
        
        private System.Threading.SendOrPostCallback onLoadExportInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginExportGlobalDataDelegate;
        
        private EndOperationDelegate onEndExportGlobalDataDelegate;
        
        private System.Threading.SendOrPostCallback onExportGlobalDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginExportSectorDelegate;
        
        private EndOperationDelegate onEndExportSectorDelegate;
        
        private System.Threading.SendOrPostCallback onExportSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogoutDelegate;
        
        private EndOperationDelegate onEndLogoutDelegate;
        
        private System.Threading.SendOrPostCallback onLogoutCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadSectorIdentifiersDelegate;
        
        private EndOperationDelegate onEndLoadSectorIdentifiersDelegate;
        
        private System.Threading.SendOrPostCallback onLoadSectorIdentifiersCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadUserSectorIdentifiersDelegate;
        
        private EndOperationDelegate onEndLoadUserSectorIdentifiersDelegate;
        
        private System.Threading.SendOrPostCallback onLoadUserSectorIdentifiersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectSandboxDelegate;
        
        private EndOperationDelegate onEndSelectSandboxDelegate;
        
        private System.Threading.SendOrPostCallback onSelectSandboxCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadCheckpointDelegate;
        
        private EndOperationDelegate onEndLoadCheckpointDelegate;
        
        private System.Threading.SendOrPostCallback onLoadCheckpointCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadObjectGroupsDelegate;
        
        private EndOperationDelegate onEndLoadObjectGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onLoadObjectGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCheckpointDelegate;
        
        private EndOperationDelegate onEndSaveCheckpointDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCheckpointCompletedDelegate;
        
        private BeginOperationDelegate onBeginTravelToSectorDelegate;
        
        private EndOperationDelegate onEndTravelToSectorDelegate;
        
        private System.Threading.SendOrPostCallback onTravelToSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginLeaveSectorDelegate;
        
        private EndOperationDelegate onEndLeaveSectorDelegate;
        
        private System.Threading.SendOrPostCallback onLeaveSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadSectorObjectsDelegate;
        
        private EndOperationDelegate onEndLoadSectorObjectsDelegate;
        
        private System.Threading.SendOrPostCallback onLoadSectorObjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckAliveDelegate;
        
        private EndOperationDelegate onEndCheckAliveDelegate;
        
        private System.Threading.SendOrPostCallback onCheckAliveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetActiveUsersDelegate;
        
        private EndOperationDelegate onEndGetActiveUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetActiveUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginAnnounceShutdownDelegate;
        
        private EndOperationDelegate onEndAnnounceShutdownDelegate;
        
        private System.Threading.SendOrPostCallback onAnnounceShutdownCompletedDelegate;
        
        private BeginOperationDelegate onBeginHarvestingFinishedDelegate;
        
        private EndOperationDelegate onEndHarvestingFinishedDelegate;
        
        private System.Threading.SendOrPostCallback onHarvestingFinishedCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadSmallShipTemplatesDelegate;
        
        private EndOperationDelegate onEndLoadSmallShipTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onLoadSmallShipTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveSmallShipTemplatesDelegate;
        
        private EndOperationDelegate onEndSaveSmallShipTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onSaveSmallShipTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewGameDelegate;
        
        private EndOperationDelegate onEndNewGameDelegate;
        
        private System.Threading.SendOrPostCallback onNewGameCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadLastCheckpointDelegate;
        
        private EndOperationDelegate onEndLoadLastCheckpointDelegate;
        
        private System.Threading.SendOrPostCallback onLoadLastCheckpointCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveLastCheckpointDelegate;
        
        private EndOperationDelegate onEndSaveLastCheckpointDelegate;
        
        private System.Threading.SendOrPostCallback onSaveLastCheckpointCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadSandboxDelegate;
        
        private EndOperationDelegate onEndLoadSandboxDelegate;
        
        private System.Threading.SendOrPostCallback onLoadSandboxCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadStoryEditorDelegate;
        
        private EndOperationDelegate onEndLoadStoryEditorDelegate;
        
        private System.Threading.SendOrPostCallback onLoadStoryEditorCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveStoryEditorDelegate;
        
        private EndOperationDelegate onEndSaveStoryEditorDelegate;
        
        private System.Threading.SendOrPostCallback onSaveStoryEditorCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadSandboxEditorDelegate;
        
        private EndOperationDelegate onEndLoadSandboxEditorDelegate;
        
        private System.Threading.SendOrPostCallback onLoadSandboxEditorCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveSandboxEditorDelegate;
        
        private EndOperationDelegate onEndSaveSandboxEditorDelegate;
        
        private System.Threading.SendOrPostCallback onSaveSandboxEditorCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadSectorDelegate;
        
        private EndOperationDelegate onEndLoadSectorDelegate;
        
        private System.Threading.SendOrPostCallback onLoadSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginTravelDelegate;
        
        private EndOperationDelegate onEndTravelDelegate;
        
        private System.Threading.SendOrPostCallback onTravelCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadSectorGroupsDelegate;
        
        private EndOperationDelegate onEndLoadSectorGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onLoadSectorGroupsCompletedDelegate;
        
        public MySectorServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MySectorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MySectorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MySectorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MySectorServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetGameMoneyCompletedEventArgs> GetGameMoneyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateGameMoneyCompleted;
        
        public event System.EventHandler<LoadExportInfoCompletedEventArgs> LoadExportInfoCompleted;
        
        public event System.EventHandler<ExportGlobalDataCompletedEventArgs> ExportGlobalDataCompleted;
        
        public event System.EventHandler<ExportSectorCompletedEventArgs> ExportSectorCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogoutCompleted;
        
        public event System.EventHandler<LoadSectorIdentifiersCompletedEventArgs> LoadSectorIdentifiersCompleted;
        
        public event System.EventHandler<LoadUserSectorIdentifiersCompletedEventArgs> LoadUserSectorIdentifiersCompleted;
        
        public event System.EventHandler<SelectSandboxCompletedEventArgs> SelectSandboxCompleted;
        
        public event System.EventHandler<LoadCheckpointCompletedEventArgs> LoadCheckpointCompleted;
        
        public event System.EventHandler<LoadObjectGroupsCompletedEventArgs> LoadObjectGroupsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveCheckpointCompleted;
        
        public event System.EventHandler<TravelToSectorCompletedEventArgs> TravelToSectorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LeaveSectorCompleted;
        
        public event System.EventHandler<LoadSectorObjectsCompletedEventArgs> LoadSectorObjectsCompleted;
        
        public event System.EventHandler<CheckAliveCompletedEventArgs> CheckAliveCompleted;
        
        public event System.EventHandler<GetActiveUsersCompletedEventArgs> GetActiveUsersCompleted;
        
        public event System.EventHandler<AnnounceShutdownCompletedEventArgs> AnnounceShutdownCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HarvestingFinishedCompleted;
        
        public event System.EventHandler<LoadSmallShipTemplatesCompletedEventArgs> LoadSmallShipTemplatesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveSmallShipTemplatesCompleted;
        
        public event System.EventHandler<NewGameCompletedEventArgs> NewGameCompleted;
        
        public event System.EventHandler<LoadLastCheckpointCompletedEventArgs> LoadLastCheckpointCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveLastCheckpointCompleted;
        
        public event System.EventHandler<LoadSandboxCompletedEventArgs> LoadSandboxCompleted;
        
        public event System.EventHandler<LoadStoryEditorCompletedEventArgs> LoadStoryEditorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveStoryEditorCompleted;
        
        public event System.EventHandler<LoadSandboxEditorCompletedEventArgs> LoadSandboxEditorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveSandboxEditorCompleted;
        
        public event System.EventHandler<LoadSectorCompletedEventArgs> LoadSectorCompleted;
        
        public event System.EventHandler<TravelCompletedEventArgs> TravelCompleted;
        
        public event System.EventHandler<LoadSectorGroupsCompletedEventArgs> LoadSectorGroupsCompleted;
        
        public decimal GetGameMoney() {
            return base.Channel.GetGameMoney();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGameMoney(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGameMoney(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndGetGameMoney(System.IAsyncResult result) {
            return base.Channel.EndGetGameMoney(result);
        }
        
        private System.IAsyncResult OnBeginGetGameMoney(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetGameMoney(callback, asyncState);
        }
        
        private object[] OnEndGetGameMoney(System.IAsyncResult result) {
            decimal retVal = this.EndGetGameMoney(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGameMoneyCompleted(object state) {
            if ((this.GetGameMoneyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGameMoneyCompleted(this, new GetGameMoneyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGameMoneyAsync() {
            this.GetGameMoneyAsync(null);
        }
        
        public void GetGameMoneyAsync(object userState) {
            if ((this.onBeginGetGameMoneyDelegate == null)) {
                this.onBeginGetGameMoneyDelegate = new BeginOperationDelegate(this.OnBeginGetGameMoney);
            }
            if ((this.onEndGetGameMoneyDelegate == null)) {
                this.onEndGetGameMoneyDelegate = new EndOperationDelegate(this.OnEndGetGameMoney);
            }
            if ((this.onGetGameMoneyCompletedDelegate == null)) {
                this.onGetGameMoneyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGameMoneyCompleted);
            }
            base.InvokeAsync(this.onBeginGetGameMoneyDelegate, null, this.onEndGetGameMoneyDelegate, this.onGetGameMoneyCompletedDelegate, userState);
        }
        
        public void UpdateGameMoney(decimal moneyAdded) {
            base.Channel.UpdateGameMoney(moneyAdded);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateGameMoney(decimal moneyAdded, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateGameMoney(moneyAdded, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateGameMoney(System.IAsyncResult result) {
            base.Channel.EndUpdateGameMoney(result);
        }
        
        private System.IAsyncResult OnBeginUpdateGameMoney(object[] inValues, System.AsyncCallback callback, object asyncState) {
            decimal moneyAdded = ((decimal)(inValues[0]));
            return this.BeginUpdateGameMoney(moneyAdded, callback, asyncState);
        }
        
        private object[] OnEndUpdateGameMoney(System.IAsyncResult result) {
            this.EndUpdateGameMoney(result);
            return null;
        }
        
        private void OnUpdateGameMoneyCompleted(object state) {
            if ((this.UpdateGameMoneyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateGameMoneyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateGameMoneyAsync(decimal moneyAdded) {
            this.UpdateGameMoneyAsync(moneyAdded, null);
        }
        
        public void UpdateGameMoneyAsync(decimal moneyAdded, object userState) {
            if ((this.onBeginUpdateGameMoneyDelegate == null)) {
                this.onBeginUpdateGameMoneyDelegate = new BeginOperationDelegate(this.OnBeginUpdateGameMoney);
            }
            if ((this.onEndUpdateGameMoneyDelegate == null)) {
                this.onEndUpdateGameMoneyDelegate = new EndOperationDelegate(this.OnEndUpdateGameMoney);
            }
            if ((this.onUpdateGameMoneyCompletedDelegate == null)) {
                this.onUpdateGameMoneyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateGameMoneyCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateGameMoneyDelegate, new object[] {
                        moneyAdded}, this.onEndUpdateGameMoneyDelegate, this.onUpdateGameMoneyCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<MinerWars.AppCode.Networking.SectorService.ExportInfo> LoadExportInfo() {
            return base.Channel.LoadExportInfo();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadExportInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadExportInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<MinerWars.AppCode.Networking.SectorService.ExportInfo> EndLoadExportInfo(System.IAsyncResult result) {
            return base.Channel.EndLoadExportInfo(result);
        }
        
        private System.IAsyncResult OnBeginLoadExportInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadExportInfo(callback, asyncState);
        }
        
        private object[] OnEndLoadExportInfo(System.IAsyncResult result) {
            System.Collections.Generic.List<MinerWars.AppCode.Networking.SectorService.ExportInfo> retVal = this.EndLoadExportInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadExportInfoCompleted(object state) {
            if ((this.LoadExportInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadExportInfoCompleted(this, new LoadExportInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadExportInfoAsync() {
            this.LoadExportInfoAsync(null);
        }
        
        public void LoadExportInfoAsync(object userState) {
            if ((this.onBeginLoadExportInfoDelegate == null)) {
                this.onBeginLoadExportInfoDelegate = new BeginOperationDelegate(this.OnBeginLoadExportInfo);
            }
            if ((this.onEndLoadExportInfoDelegate == null)) {
                this.onEndLoadExportInfoDelegate = new EndOperationDelegate(this.OnEndLoadExportInfo);
            }
            if ((this.onLoadExportInfoCompletedDelegate == null)) {
                this.onLoadExportInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadExportInfoCompleted);
            }
            base.InvokeAsync(this.onBeginLoadExportInfoDelegate, null, this.onEndLoadExportInfoDelegate, this.onLoadExportInfoCompletedDelegate, userState);
        }
        
        public byte[] ExportGlobalData(out byte[] storyCheckpoint, out byte[] sandboxCheckpoint) {
            return base.Channel.ExportGlobalData(out storyCheckpoint, out sandboxCheckpoint);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExportGlobalData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExportGlobalData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndExportGlobalData(out byte[] storyCheckpoint, out byte[] sandboxCheckpoint, System.IAsyncResult result) {
            return base.Channel.EndExportGlobalData(out storyCheckpoint, out sandboxCheckpoint, result);
        }
        
        private System.IAsyncResult OnBeginExportGlobalData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginExportGlobalData(callback, asyncState);
        }
        
        private object[] OnEndExportGlobalData(System.IAsyncResult result) {
            byte[] storyCheckpoint = this.GetDefaultValueForInitialization<byte[]>();
            byte[] sandboxCheckpoint = this.GetDefaultValueForInitialization<byte[]>();
            byte[] retVal = this.EndExportGlobalData(out storyCheckpoint, out sandboxCheckpoint, result);
            return new object[] {
                    storyCheckpoint,
                    sandboxCheckpoint,
                    retVal};
        }
        
        private void OnExportGlobalDataCompleted(object state) {
            if ((this.ExportGlobalDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExportGlobalDataCompleted(this, new ExportGlobalDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExportGlobalDataAsync() {
            this.ExportGlobalDataAsync(null);
        }
        
        public void ExportGlobalDataAsync(object userState) {
            if ((this.onBeginExportGlobalDataDelegate == null)) {
                this.onBeginExportGlobalDataDelegate = new BeginOperationDelegate(this.OnBeginExportGlobalData);
            }
            if ((this.onEndExportGlobalDataDelegate == null)) {
                this.onEndExportGlobalDataDelegate = new EndOperationDelegate(this.OnEndExportGlobalData);
            }
            if ((this.onExportGlobalDataCompletedDelegate == null)) {
                this.onExportGlobalDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExportGlobalDataCompleted);
            }
            base.InvokeAsync(this.onBeginExportGlobalDataDelegate, null, this.onEndExportGlobalDataDelegate, this.onExportGlobalDataCompletedDelegate, userState);
        }
        
        public byte[] ExportSector(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType) {
            return base.Channel.ExportSector(sectorPosition, userId, sectorType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExportSector(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExportSector(sectorPosition, userId, sectorType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndExportSector(System.IAsyncResult result) {
            return base.Channel.EndExportSector(result);
        }
        
        private System.IAsyncResult OnBeginExportSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition = ((MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int)(inValues[0]));
            System.Nullable<int> userId = ((System.Nullable<int>)(inValues[1]));
            MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType = ((MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum)(inValues[2]));
            return this.BeginExportSector(sectorPosition, userId, sectorType, callback, asyncState);
        }
        
        private object[] OnEndExportSector(System.IAsyncResult result) {
            byte[] retVal = this.EndExportSector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExportSectorCompleted(object state) {
            if ((this.ExportSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExportSectorCompleted(this, new ExportSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExportSectorAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType) {
            this.ExportSectorAsync(sectorPosition, userId, sectorType, null);
        }
        
        public void ExportSectorAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType, object userState) {
            if ((this.onBeginExportSectorDelegate == null)) {
                this.onBeginExportSectorDelegate = new BeginOperationDelegate(this.OnBeginExportSector);
            }
            if ((this.onEndExportSectorDelegate == null)) {
                this.onEndExportSectorDelegate = new EndOperationDelegate(this.OnEndExportSector);
            }
            if ((this.onExportSectorCompletedDelegate == null)) {
                this.onExportSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExportSectorCompleted);
            }
            base.InvokeAsync(this.onBeginExportSectorDelegate, new object[] {
                        sectorPosition,
                        userId,
                        sectorType}, this.onEndExportSectorDelegate, this.onExportSectorCompletedDelegate, userState);
        }
        
        public MinerWars.AppCode.Networking.SectorService.MyUserInfo Login(int gameVersion) {
            return base.Channel.Login(gameVersion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(int gameVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(gameVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MinerWars.AppCode.Networking.SectorService.MyUserInfo EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int gameVersion = ((int)(inValues[0]));
            return this.BeginLogin(gameVersion, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            MinerWars.AppCode.Networking.SectorService.MyUserInfo retVal = this.EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(int gameVersion) {
            this.LoginAsync(gameVersion, null);
        }
        
        public void LoginAsync(int gameVersion, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        gameVersion}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogout(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogout(System.IAsyncResult result) {
            base.Channel.EndLogout(result);
        }
        
        private System.IAsyncResult OnBeginLogout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLogout(callback, asyncState);
        }
        
        private object[] OnEndLogout(System.IAsyncResult result) {
            this.EndLogout(result);
            return null;
        }
        
        private void OnLogoutCompleted(object state) {
            if ((this.LogoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        public void LogoutAsync(object userState) {
            if ((this.onBeginLogoutDelegate == null)) {
                this.onBeginLogoutDelegate = new BeginOperationDelegate(this.OnBeginLogout);
            }
            if ((this.onEndLogoutDelegate == null)) {
                this.onEndLogoutDelegate = new EndOperationDelegate(this.OnEndLogout);
            }
            if ((this.onLogoutCompletedDelegate == null)) {
                this.onLogoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogoutCompleted);
            }
            base.InvokeAsync(this.onBeginLogoutDelegate, null, this.onEndLogoutDelegate, this.onLogoutCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> LoadSectorIdentifiers(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType) {
            return base.Channel.LoadSectorIdentifiers(sectorType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadSectorIdentifiers(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadSectorIdentifiers(sectorType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> EndLoadSectorIdentifiers(System.IAsyncResult result) {
            return base.Channel.EndLoadSectorIdentifiers(result);
        }
        
        private System.IAsyncResult OnBeginLoadSectorIdentifiers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType = ((MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum)(inValues[0]));
            return this.BeginLoadSectorIdentifiers(sectorType, callback, asyncState);
        }
        
        private object[] OnEndLoadSectorIdentifiers(System.IAsyncResult result) {
            System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> retVal = this.EndLoadSectorIdentifiers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadSectorIdentifiersCompleted(object state) {
            if ((this.LoadSectorIdentifiersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadSectorIdentifiersCompleted(this, new LoadSectorIdentifiersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadSectorIdentifiersAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType) {
            this.LoadSectorIdentifiersAsync(sectorType, null);
        }
        
        public void LoadSectorIdentifiersAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sectorType, object userState) {
            if ((this.onBeginLoadSectorIdentifiersDelegate == null)) {
                this.onBeginLoadSectorIdentifiersDelegate = new BeginOperationDelegate(this.OnBeginLoadSectorIdentifiers);
            }
            if ((this.onEndLoadSectorIdentifiersDelegate == null)) {
                this.onEndLoadSectorIdentifiersDelegate = new EndOperationDelegate(this.OnEndLoadSectorIdentifiers);
            }
            if ((this.onLoadSectorIdentifiersCompletedDelegate == null)) {
                this.onLoadSectorIdentifiersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadSectorIdentifiersCompleted);
            }
            base.InvokeAsync(this.onBeginLoadSectorIdentifiersDelegate, new object[] {
                        sectorType}, this.onEndLoadSectorIdentifiersDelegate, this.onLoadSectorIdentifiersCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> LoadUserSectorIdentifiers() {
            return base.Channel.LoadUserSectorIdentifiers();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadUserSectorIdentifiers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadUserSectorIdentifiers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> EndLoadUserSectorIdentifiers(System.IAsyncResult result) {
            return base.Channel.EndLoadUserSectorIdentifiers(result);
        }
        
        private System.IAsyncResult OnBeginLoadUserSectorIdentifiers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadUserSectorIdentifiers(callback, asyncState);
        }
        
        private object[] OnEndLoadUserSectorIdentifiers(System.IAsyncResult result) {
            System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> retVal = this.EndLoadUserSectorIdentifiers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadUserSectorIdentifiersCompleted(object state) {
            if ((this.LoadUserSectorIdentifiersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadUserSectorIdentifiersCompleted(this, new LoadUserSectorIdentifiersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadUserSectorIdentifiersAsync() {
            this.LoadUserSectorIdentifiersAsync(null);
        }
        
        public void LoadUserSectorIdentifiersAsync(object userState) {
            if ((this.onBeginLoadUserSectorIdentifiersDelegate == null)) {
                this.onBeginLoadUserSectorIdentifiersDelegate = new BeginOperationDelegate(this.OnBeginLoadUserSectorIdentifiers);
            }
            if ((this.onEndLoadUserSectorIdentifiersDelegate == null)) {
                this.onEndLoadUserSectorIdentifiersDelegate = new EndOperationDelegate(this.OnEndLoadUserSectorIdentifiers);
            }
            if ((this.onLoadUserSectorIdentifiersCompletedDelegate == null)) {
                this.onLoadUserSectorIdentifiersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadUserSectorIdentifiersCompleted);
            }
            base.InvokeAsync(this.onBeginLoadUserSectorIdentifiersDelegate, null, this.onEndLoadUserSectorIdentifiersDelegate, this.onLoadUserSectorIdentifiersCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> SelectSandbox(out System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcUserDetail> userDetails, MinerWars.CommonLIB.AppCode.Networking.MyMwcSelectSectorRequestTypeEnum selectSandboxType, string findPlayerName) {
            return base.Channel.SelectSandbox(out userDetails, selectSandboxType, findPlayerName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSelectSandbox(MinerWars.CommonLIB.AppCode.Networking.MyMwcSelectSectorRequestTypeEnum selectSandboxType, string findPlayerName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectSandbox(selectSandboxType, findPlayerName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> EndSelectSandbox(out System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcUserDetail> userDetails, System.IAsyncResult result) {
            return base.Channel.EndSelectSandbox(out userDetails, result);
        }
        
        private System.IAsyncResult OnBeginSelectSandbox(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Networking.MyMwcSelectSectorRequestTypeEnum selectSandboxType = ((MinerWars.CommonLIB.AppCode.Networking.MyMwcSelectSectorRequestTypeEnum)(inValues[0]));
            string findPlayerName = ((string)(inValues[1]));
            return this.BeginSelectSandbox(selectSandboxType, findPlayerName, callback, asyncState);
        }
        
        private object[] OnEndSelectSandbox(System.IAsyncResult result) {
            System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcUserDetail> userDetails = this.GetDefaultValueForInitialization<System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcUserDetail>>();
            System.Collections.Generic.List<MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorIdentifier> retVal = this.EndSelectSandbox(out userDetails, result);
            return new object[] {
                    userDetails,
                    retVal};
        }
        
        private void OnSelectSandboxCompleted(object state) {
            if ((this.SelectSandboxCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectSandboxCompleted(this, new SelectSandboxCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectSandboxAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcSelectSectorRequestTypeEnum selectSandboxType, string findPlayerName) {
            this.SelectSandboxAsync(selectSandboxType, findPlayerName, null);
        }
        
        public void SelectSandboxAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcSelectSectorRequestTypeEnum selectSandboxType, string findPlayerName, object userState) {
            if ((this.onBeginSelectSandboxDelegate == null)) {
                this.onBeginSelectSandboxDelegate = new BeginOperationDelegate(this.OnBeginSelectSandbox);
            }
            if ((this.onEndSelectSandboxDelegate == null)) {
                this.onEndSelectSandboxDelegate = new EndOperationDelegate(this.OnEndSelectSandbox);
            }
            if ((this.onSelectSandboxCompletedDelegate == null)) {
                this.onSelectSandboxCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectSandboxCompleted);
            }
            base.InvokeAsync(this.onBeginSelectSandboxDelegate, new object[] {
                        selectSandboxType,
                        findPlayerName}, this.onEndSelectSandboxDelegate, this.onSelectSandboxCompletedDelegate, userState);
        }
        
        public byte[] LoadCheckpoint(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, MinerWars.CommonLIB.AppCode.Networking.MyMwcSessionStateEnum sessionStartType, System.Nullable<int> userId, System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> sectorPosition, string checkpointName) {
            return base.Channel.LoadCheckpoint(sessionType, sessionStartType, userId, sectorPosition, checkpointName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadCheckpoint(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, MinerWars.CommonLIB.AppCode.Networking.MyMwcSessionStateEnum sessionStartType, System.Nullable<int> userId, System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> sectorPosition, string checkpointName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadCheckpoint(sessionType, sessionStartType, userId, sectorPosition, checkpointName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadCheckpoint(System.IAsyncResult result) {
            return base.Channel.EndLoadCheckpoint(result);
        }
        
        private System.IAsyncResult OnBeginLoadCheckpoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType = ((MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum)(inValues[0]));
            MinerWars.CommonLIB.AppCode.Networking.MyMwcSessionStateEnum sessionStartType = ((MinerWars.CommonLIB.AppCode.Networking.MyMwcSessionStateEnum)(inValues[1]));
            System.Nullable<int> userId = ((System.Nullable<int>)(inValues[2]));
            System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> sectorPosition = ((System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int>)(inValues[3]));
            string checkpointName = ((string)(inValues[4]));
            return this.BeginLoadCheckpoint(sessionType, sessionStartType, userId, sectorPosition, checkpointName, callback, asyncState);
        }
        
        private object[] OnEndLoadCheckpoint(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadCheckpoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadCheckpointCompleted(object state) {
            if ((this.LoadCheckpointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadCheckpointCompleted(this, new LoadCheckpointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadCheckpointAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, MinerWars.CommonLIB.AppCode.Networking.MyMwcSessionStateEnum sessionStartType, System.Nullable<int> userId, System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> sectorPosition, string checkpointName) {
            this.LoadCheckpointAsync(sessionType, sessionStartType, userId, sectorPosition, checkpointName, null);
        }
        
        public void LoadCheckpointAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, MinerWars.CommonLIB.AppCode.Networking.MyMwcSessionStateEnum sessionStartType, System.Nullable<int> userId, System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> sectorPosition, string checkpointName, object userState) {
            if ((this.onBeginLoadCheckpointDelegate == null)) {
                this.onBeginLoadCheckpointDelegate = new BeginOperationDelegate(this.OnBeginLoadCheckpoint);
            }
            if ((this.onEndLoadCheckpointDelegate == null)) {
                this.onEndLoadCheckpointDelegate = new EndOperationDelegate(this.OnEndLoadCheckpoint);
            }
            if ((this.onLoadCheckpointCompletedDelegate == null)) {
                this.onLoadCheckpointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadCheckpointCompleted);
            }
            base.InvokeAsync(this.onBeginLoadCheckpointDelegate, new object[] {
                        sessionType,
                        sessionStartType,
                        userId,
                        sectorPosition,
                        checkpointName}, this.onEndLoadCheckpointDelegate, this.onLoadCheckpointCompletedDelegate, userState);
        }
        
        public byte[] LoadObjectGroups(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition) {
            return base.Channel.LoadObjectGroups(sessionType, userId, sectorPosition);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadObjectGroups(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadObjectGroups(sessionType, userId, sectorPosition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadObjectGroups(System.IAsyncResult result) {
            return base.Channel.EndLoadObjectGroups(result);
        }
        
        private System.IAsyncResult OnBeginLoadObjectGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType = ((MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum)(inValues[0]));
            System.Nullable<int> userId = ((System.Nullable<int>)(inValues[1]));
            MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition = ((MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int)(inValues[2]));
            return this.BeginLoadObjectGroups(sessionType, userId, sectorPosition, callback, asyncState);
        }
        
        private object[] OnEndLoadObjectGroups(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadObjectGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadObjectGroupsCompleted(object state) {
            if ((this.LoadObjectGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadObjectGroupsCompleted(this, new LoadObjectGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadObjectGroupsAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition) {
            this.LoadObjectGroupsAsync(sessionType, userId, sectorPosition, null);
        }
        
        public void LoadObjectGroupsAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcSectorTypeEnum sessionType, System.Nullable<int> userId, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, object userState) {
            if ((this.onBeginLoadObjectGroupsDelegate == null)) {
                this.onBeginLoadObjectGroupsDelegate = new BeginOperationDelegate(this.OnBeginLoadObjectGroups);
            }
            if ((this.onEndLoadObjectGroupsDelegate == null)) {
                this.onEndLoadObjectGroupsDelegate = new EndOperationDelegate(this.OnEndLoadObjectGroups);
            }
            if ((this.onLoadObjectGroupsCompletedDelegate == null)) {
                this.onLoadObjectGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadObjectGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginLoadObjectGroupsDelegate, new object[] {
                        sessionType,
                        userId,
                        sectorPosition}, this.onEndLoadObjectGroupsDelegate, this.onLoadObjectGroupsCompletedDelegate, userState);
        }
        
        public void SaveCheckpoint(byte[] checkpoint, bool savePlayer) {
            base.Channel.SaveCheckpoint(checkpoint, savePlayer);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveCheckpoint(byte[] checkpoint, bool savePlayer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCheckpoint(checkpoint, savePlayer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveCheckpoint(System.IAsyncResult result) {
            base.Channel.EndSaveCheckpoint(result);
        }
        
        private System.IAsyncResult OnBeginSaveCheckpoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] checkpoint = ((byte[])(inValues[0]));
            bool savePlayer = ((bool)(inValues[1]));
            return this.BeginSaveCheckpoint(checkpoint, savePlayer, callback, asyncState);
        }
        
        private object[] OnEndSaveCheckpoint(System.IAsyncResult result) {
            this.EndSaveCheckpoint(result);
            return null;
        }
        
        private void OnSaveCheckpointCompleted(object state) {
            if ((this.SaveCheckpointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCheckpointCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCheckpointAsync(byte[] checkpoint, bool savePlayer) {
            this.SaveCheckpointAsync(checkpoint, savePlayer, null);
        }
        
        public void SaveCheckpointAsync(byte[] checkpoint, bool savePlayer, object userState) {
            if ((this.onBeginSaveCheckpointDelegate == null)) {
                this.onBeginSaveCheckpointDelegate = new BeginOperationDelegate(this.OnBeginSaveCheckpoint);
            }
            if ((this.onEndSaveCheckpointDelegate == null)) {
                this.onEndSaveCheckpointDelegate = new EndOperationDelegate(this.OnEndSaveCheckpoint);
            }
            if ((this.onSaveCheckpointCompletedDelegate == null)) {
                this.onSaveCheckpointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCheckpointCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCheckpointDelegate, new object[] {
                        checkpoint,
                        savePlayer}, this.onEndSaveCheckpointDelegate, this.onSaveCheckpointCompletedDelegate, userState);
        }
        
        public byte[] TravelToSector(out VRageMath.Vector3 newShipPosition, MinerWars.CommonLIB.AppCode.Networking.MyMwcTravelTypeEnum travelType, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, VRageMath.Vector3 currentShipPosition, int currentSectorVersion) {
            return base.Channel.TravelToSector(out newShipPosition, travelType, targetSector, currentShipPosition, currentSectorVersion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTravelToSector(MinerWars.CommonLIB.AppCode.Networking.MyMwcTravelTypeEnum travelType, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, VRageMath.Vector3 currentShipPosition, int currentSectorVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTravelToSector(travelType, targetSector, currentShipPosition, currentSectorVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndTravelToSector(out VRageMath.Vector3 newShipPosition, System.IAsyncResult result) {
            return base.Channel.EndTravelToSector(out newShipPosition, result);
        }
        
        private System.IAsyncResult OnBeginTravelToSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Networking.MyMwcTravelTypeEnum travelType = ((MinerWars.CommonLIB.AppCode.Networking.MyMwcTravelTypeEnum)(inValues[0]));
            MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector = ((MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int)(inValues[1]));
            VRageMath.Vector3 currentShipPosition = ((VRageMath.Vector3)(inValues[2]));
            int currentSectorVersion = ((int)(inValues[3]));
            return this.BeginTravelToSector(travelType, targetSector, currentShipPosition, currentSectorVersion, callback, asyncState);
        }
        
        private object[] OnEndTravelToSector(System.IAsyncResult result) {
            VRageMath.Vector3 newShipPosition = this.GetDefaultValueForInitialization<VRageMath.Vector3>();
            byte[] retVal = this.EndTravelToSector(out newShipPosition, result);
            return new object[] {
                    newShipPosition,
                    retVal};
        }
        
        private void OnTravelToSectorCompleted(object state) {
            if ((this.TravelToSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TravelToSectorCompleted(this, new TravelToSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TravelToSectorAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcTravelTypeEnum travelType, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, VRageMath.Vector3 currentShipPosition, int currentSectorVersion) {
            this.TravelToSectorAsync(travelType, targetSector, currentShipPosition, currentSectorVersion, null);
        }
        
        public void TravelToSectorAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcTravelTypeEnum travelType, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, VRageMath.Vector3 currentShipPosition, int currentSectorVersion, object userState) {
            if ((this.onBeginTravelToSectorDelegate == null)) {
                this.onBeginTravelToSectorDelegate = new BeginOperationDelegate(this.OnBeginTravelToSector);
            }
            if ((this.onEndTravelToSectorDelegate == null)) {
                this.onEndTravelToSectorDelegate = new EndOperationDelegate(this.OnEndTravelToSector);
            }
            if ((this.onTravelToSectorCompletedDelegate == null)) {
                this.onTravelToSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTravelToSectorCompleted);
            }
            base.InvokeAsync(this.onBeginTravelToSectorDelegate, new object[] {
                        travelType,
                        targetSector,
                        currentShipPosition,
                        currentSectorVersion}, this.onEndTravelToSectorDelegate, this.onTravelToSectorCompletedDelegate, userState);
        }
        
        public void LeaveSector(MinerWars.CommonLIB.AppCode.Networking.MyMwcLeaveSectorReasonEnum reason) {
            base.Channel.LeaveSector(reason);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLeaveSector(MinerWars.CommonLIB.AppCode.Networking.MyMwcLeaveSectorReasonEnum reason, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLeaveSector(reason, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLeaveSector(System.IAsyncResult result) {
            base.Channel.EndLeaveSector(result);
        }
        
        private System.IAsyncResult OnBeginLeaveSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Networking.MyMwcLeaveSectorReasonEnum reason = ((MinerWars.CommonLIB.AppCode.Networking.MyMwcLeaveSectorReasonEnum)(inValues[0]));
            return this.BeginLeaveSector(reason, callback, asyncState);
        }
        
        private object[] OnEndLeaveSector(System.IAsyncResult result) {
            this.EndLeaveSector(result);
            return null;
        }
        
        private void OnLeaveSectorCompleted(object state) {
            if ((this.LeaveSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LeaveSectorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LeaveSectorAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcLeaveSectorReasonEnum reason) {
            this.LeaveSectorAsync(reason, null);
        }
        
        public void LeaveSectorAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcLeaveSectorReasonEnum reason, object userState) {
            if ((this.onBeginLeaveSectorDelegate == null)) {
                this.onBeginLeaveSectorDelegate = new BeginOperationDelegate(this.OnBeginLeaveSector);
            }
            if ((this.onEndLeaveSectorDelegate == null)) {
                this.onEndLeaveSectorDelegate = new EndOperationDelegate(this.OnEndLeaveSector);
            }
            if ((this.onLeaveSectorCompletedDelegate == null)) {
                this.onLeaveSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLeaveSectorCompleted);
            }
            base.InvokeAsync(this.onBeginLeaveSectorDelegate, new object[] {
                        reason}, this.onEndLeaveSectorDelegate, this.onLeaveSectorCompletedDelegate, userState);
        }
        
        public byte[] LoadSectorObjects(string playerName, string sectorName, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition) {
            return base.Channel.LoadSectorObjects(playerName, sectorName, sectorPosition);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadSectorObjects(string playerName, string sectorName, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadSectorObjects(playerName, sectorName, sectorPosition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadSectorObjects(System.IAsyncResult result) {
            return base.Channel.EndLoadSectorObjects(result);
        }
        
        private System.IAsyncResult OnBeginLoadSectorObjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string sectorName = ((string)(inValues[1]));
            MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition = ((MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int)(inValues[2]));
            return this.BeginLoadSectorObjects(playerName, sectorName, sectorPosition, callback, asyncState);
        }
        
        private object[] OnEndLoadSectorObjects(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadSectorObjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadSectorObjectsCompleted(object state) {
            if ((this.LoadSectorObjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadSectorObjectsCompleted(this, new LoadSectorObjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadSectorObjectsAsync(string playerName, string sectorName, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition) {
            this.LoadSectorObjectsAsync(playerName, sectorName, sectorPosition, null);
        }
        
        public void LoadSectorObjectsAsync(string playerName, string sectorName, MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, object userState) {
            if ((this.onBeginLoadSectorObjectsDelegate == null)) {
                this.onBeginLoadSectorObjectsDelegate = new BeginOperationDelegate(this.OnBeginLoadSectorObjects);
            }
            if ((this.onEndLoadSectorObjectsDelegate == null)) {
                this.onEndLoadSectorObjectsDelegate = new EndOperationDelegate(this.OnEndLoadSectorObjects);
            }
            if ((this.onLoadSectorObjectsCompletedDelegate == null)) {
                this.onLoadSectorObjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadSectorObjectsCompleted);
            }
            base.InvokeAsync(this.onBeginLoadSectorObjectsDelegate, new object[] {
                        playerName,
                        sectorName,
                        sectorPosition}, this.onEndLoadSectorObjectsDelegate, this.onLoadSectorObjectsCompletedDelegate, userState);
        }
        
        public bool CheckAlive() {
            return base.Channel.CheckAlive();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckAlive(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckAlive(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckAlive(System.IAsyncResult result) {
            return base.Channel.EndCheckAlive(result);
        }
        
        private System.IAsyncResult OnBeginCheckAlive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginCheckAlive(callback, asyncState);
        }
        
        private object[] OnEndCheckAlive(System.IAsyncResult result) {
            bool retVal = this.EndCheckAlive(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckAliveCompleted(object state) {
            if ((this.CheckAliveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckAliveCompleted(this, new CheckAliveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckAliveAsync() {
            this.CheckAliveAsync(null);
        }
        
        public void CheckAliveAsync(object userState) {
            if ((this.onBeginCheckAliveDelegate == null)) {
                this.onBeginCheckAliveDelegate = new BeginOperationDelegate(this.OnBeginCheckAlive);
            }
            if ((this.onEndCheckAliveDelegate == null)) {
                this.onEndCheckAliveDelegate = new EndOperationDelegate(this.OnEndCheckAlive);
            }
            if ((this.onCheckAliveCompletedDelegate == null)) {
                this.onCheckAliveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckAliveCompleted);
            }
            base.InvokeAsync(this.onBeginCheckAliveDelegate, null, this.onEndCheckAliveDelegate, this.onCheckAliveCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<string> GetActiveUsers() {
            return base.Channel.GetActiveUsers();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetActiveUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetActiveUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndGetActiveUsers(System.IAsyncResult result) {
            return base.Channel.EndGetActiveUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetActiveUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetActiveUsers(callback, asyncState);
        }
        
        private object[] OnEndGetActiveUsers(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndGetActiveUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetActiveUsersCompleted(object state) {
            if ((this.GetActiveUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetActiveUsersCompleted(this, new GetActiveUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetActiveUsersAsync() {
            this.GetActiveUsersAsync(null);
        }
        
        public void GetActiveUsersAsync(object userState) {
            if ((this.onBeginGetActiveUsersDelegate == null)) {
                this.onBeginGetActiveUsersDelegate = new BeginOperationDelegate(this.OnBeginGetActiveUsers);
            }
            if ((this.onEndGetActiveUsersDelegate == null)) {
                this.onEndGetActiveUsersDelegate = new EndOperationDelegate(this.OnEndGetActiveUsers);
            }
            if ((this.onGetActiveUsersCompletedDelegate == null)) {
                this.onGetActiveUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetActiveUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetActiveUsersDelegate, null, this.onEndGetActiveUsersDelegate, this.onGetActiveUsersCompletedDelegate, userState);
        }
        
        public int AnnounceShutdown(System.TimeSpan timeToShutdown, System.TimeSpan shutdownLength, string message) {
            return base.Channel.AnnounceShutdown(timeToShutdown, shutdownLength, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAnnounceShutdown(System.TimeSpan timeToShutdown, System.TimeSpan shutdownLength, string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAnnounceShutdown(timeToShutdown, shutdownLength, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAnnounceShutdown(System.IAsyncResult result) {
            return base.Channel.EndAnnounceShutdown(result);
        }
        
        private System.IAsyncResult OnBeginAnnounceShutdown(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.TimeSpan timeToShutdown = ((System.TimeSpan)(inValues[0]));
            System.TimeSpan shutdownLength = ((System.TimeSpan)(inValues[1]));
            string message = ((string)(inValues[2]));
            return this.BeginAnnounceShutdown(timeToShutdown, shutdownLength, message, callback, asyncState);
        }
        
        private object[] OnEndAnnounceShutdown(System.IAsyncResult result) {
            int retVal = this.EndAnnounceShutdown(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAnnounceShutdownCompleted(object state) {
            if ((this.AnnounceShutdownCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AnnounceShutdownCompleted(this, new AnnounceShutdownCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AnnounceShutdownAsync(System.TimeSpan timeToShutdown, System.TimeSpan shutdownLength, string message) {
            this.AnnounceShutdownAsync(timeToShutdown, shutdownLength, message, null);
        }
        
        public void AnnounceShutdownAsync(System.TimeSpan timeToShutdown, System.TimeSpan shutdownLength, string message, object userState) {
            if ((this.onBeginAnnounceShutdownDelegate == null)) {
                this.onBeginAnnounceShutdownDelegate = new BeginOperationDelegate(this.OnBeginAnnounceShutdown);
            }
            if ((this.onEndAnnounceShutdownDelegate == null)) {
                this.onEndAnnounceShutdownDelegate = new EndOperationDelegate(this.OnEndAnnounceShutdown);
            }
            if ((this.onAnnounceShutdownCompletedDelegate == null)) {
                this.onAnnounceShutdownCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAnnounceShutdownCompleted);
            }
            base.InvokeAsync(this.onBeginAnnounceShutdownDelegate, new object[] {
                        timeToShutdown,
                        shutdownLength,
                        message}, this.onEndAnnounceShutdownDelegate, this.onAnnounceShutdownCompletedDelegate, userState);
        }
        
        public void HarvestingFinished(MinerWars.CommonLIB.AppCode.Networking.MyMwcVoxelMaterialsEnum materialEnum, byte voxelContentHarvested) {
            base.Channel.HarvestingFinished(materialEnum, voxelContentHarvested);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHarvestingFinished(MinerWars.CommonLIB.AppCode.Networking.MyMwcVoxelMaterialsEnum materialEnum, byte voxelContentHarvested, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHarvestingFinished(materialEnum, voxelContentHarvested, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndHarvestingFinished(System.IAsyncResult result) {
            base.Channel.EndHarvestingFinished(result);
        }
        
        private System.IAsyncResult OnBeginHarvestingFinished(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Networking.MyMwcVoxelMaterialsEnum materialEnum = ((MinerWars.CommonLIB.AppCode.Networking.MyMwcVoxelMaterialsEnum)(inValues[0]));
            byte voxelContentHarvested = ((byte)(inValues[1]));
            return this.BeginHarvestingFinished(materialEnum, voxelContentHarvested, callback, asyncState);
        }
        
        private object[] OnEndHarvestingFinished(System.IAsyncResult result) {
            this.EndHarvestingFinished(result);
            return null;
        }
        
        private void OnHarvestingFinishedCompleted(object state) {
            if ((this.HarvestingFinishedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HarvestingFinishedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HarvestingFinishedAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcVoxelMaterialsEnum materialEnum, byte voxelContentHarvested) {
            this.HarvestingFinishedAsync(materialEnum, voxelContentHarvested, null);
        }
        
        public void HarvestingFinishedAsync(MinerWars.CommonLIB.AppCode.Networking.MyMwcVoxelMaterialsEnum materialEnum, byte voxelContentHarvested, object userState) {
            if ((this.onBeginHarvestingFinishedDelegate == null)) {
                this.onBeginHarvestingFinishedDelegate = new BeginOperationDelegate(this.OnBeginHarvestingFinished);
            }
            if ((this.onEndHarvestingFinishedDelegate == null)) {
                this.onEndHarvestingFinishedDelegate = new EndOperationDelegate(this.OnEndHarvestingFinished);
            }
            if ((this.onHarvestingFinishedCompletedDelegate == null)) {
                this.onHarvestingFinishedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHarvestingFinishedCompleted);
            }
            base.InvokeAsync(this.onBeginHarvestingFinishedDelegate, new object[] {
                        materialEnum,
                        voxelContentHarvested}, this.onEndHarvestingFinishedDelegate, this.onHarvestingFinishedCompletedDelegate, userState);
        }
        
        public byte[] LoadSmallShipTemplates() {
            return base.Channel.LoadSmallShipTemplates();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadSmallShipTemplates(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadSmallShipTemplates(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadSmallShipTemplates(System.IAsyncResult result) {
            return base.Channel.EndLoadSmallShipTemplates(result);
        }
        
        private System.IAsyncResult OnBeginLoadSmallShipTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadSmallShipTemplates(callback, asyncState);
        }
        
        private object[] OnEndLoadSmallShipTemplates(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadSmallShipTemplates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadSmallShipTemplatesCompleted(object state) {
            if ((this.LoadSmallShipTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadSmallShipTemplatesCompleted(this, new LoadSmallShipTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadSmallShipTemplatesAsync() {
            this.LoadSmallShipTemplatesAsync(null);
        }
        
        public void LoadSmallShipTemplatesAsync(object userState) {
            if ((this.onBeginLoadSmallShipTemplatesDelegate == null)) {
                this.onBeginLoadSmallShipTemplatesDelegate = new BeginOperationDelegate(this.OnBeginLoadSmallShipTemplates);
            }
            if ((this.onEndLoadSmallShipTemplatesDelegate == null)) {
                this.onEndLoadSmallShipTemplatesDelegate = new EndOperationDelegate(this.OnEndLoadSmallShipTemplates);
            }
            if ((this.onLoadSmallShipTemplatesCompletedDelegate == null)) {
                this.onLoadSmallShipTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadSmallShipTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginLoadSmallShipTemplatesDelegate, null, this.onEndLoadSmallShipTemplatesDelegate, this.onLoadSmallShipTemplatesCompletedDelegate, userState);
        }
        
        public void SaveSmallShipTemplates(byte[] smallShipTemplates) {
            base.Channel.SaveSmallShipTemplates(smallShipTemplates);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveSmallShipTemplates(byte[] smallShipTemplates, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveSmallShipTemplates(smallShipTemplates, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveSmallShipTemplates(System.IAsyncResult result) {
            base.Channel.EndSaveSmallShipTemplates(result);
        }
        
        private System.IAsyncResult OnBeginSaveSmallShipTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] smallShipTemplates = ((byte[])(inValues[0]));
            return this.BeginSaveSmallShipTemplates(smallShipTemplates, callback, asyncState);
        }
        
        private object[] OnEndSaveSmallShipTemplates(System.IAsyncResult result) {
            this.EndSaveSmallShipTemplates(result);
            return null;
        }
        
        private void OnSaveSmallShipTemplatesCompleted(object state) {
            if ((this.SaveSmallShipTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveSmallShipTemplatesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveSmallShipTemplatesAsync(byte[] smallShipTemplates) {
            this.SaveSmallShipTemplatesAsync(smallShipTemplates, null);
        }
        
        public void SaveSmallShipTemplatesAsync(byte[] smallShipTemplates, object userState) {
            if ((this.onBeginSaveSmallShipTemplatesDelegate == null)) {
                this.onBeginSaveSmallShipTemplatesDelegate = new BeginOperationDelegate(this.OnBeginSaveSmallShipTemplates);
            }
            if ((this.onEndSaveSmallShipTemplatesDelegate == null)) {
                this.onEndSaveSmallShipTemplatesDelegate = new EndOperationDelegate(this.OnEndSaveSmallShipTemplates);
            }
            if ((this.onSaveSmallShipTemplatesCompletedDelegate == null)) {
                this.onSaveSmallShipTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveSmallShipTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginSaveSmallShipTemplatesDelegate, new object[] {
                        smallShipTemplates}, this.onEndSaveSmallShipTemplatesDelegate, this.onSaveSmallShipTemplatesCompletedDelegate, userState);
        }
        
        public byte[] NewGame(System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> startSector) {
            return base.Channel.NewGame(startSector);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNewGame(System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> startSector, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewGame(startSector, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndNewGame(System.IAsyncResult result) {
            return base.Channel.EndNewGame(result);
        }
        
        private System.IAsyncResult OnBeginNewGame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> startSector = ((System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int>)(inValues[0]));
            return this.BeginNewGame(startSector, callback, asyncState);
        }
        
        private object[] OnEndNewGame(System.IAsyncResult result) {
            byte[] retVal = this.EndNewGame(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewGameCompleted(object state) {
            if ((this.NewGameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewGameCompleted(this, new NewGameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewGameAsync(System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> startSector) {
            this.NewGameAsync(startSector, null);
        }
        
        public void NewGameAsync(System.Nullable<MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int> startSector, object userState) {
            if ((this.onBeginNewGameDelegate == null)) {
                this.onBeginNewGameDelegate = new BeginOperationDelegate(this.OnBeginNewGame);
            }
            if ((this.onEndNewGameDelegate == null)) {
                this.onEndNewGameDelegate = new EndOperationDelegate(this.OnEndNewGame);
            }
            if ((this.onNewGameCompletedDelegate == null)) {
                this.onNewGameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewGameCompleted);
            }
            base.InvokeAsync(this.onBeginNewGameDelegate, new object[] {
                        startSector}, this.onEndNewGameDelegate, this.onNewGameCompletedDelegate, userState);
        }
        
        public byte[] LoadLastCheckpoint() {
            return base.Channel.LoadLastCheckpoint();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadLastCheckpoint(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadLastCheckpoint(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadLastCheckpoint(System.IAsyncResult result) {
            return base.Channel.EndLoadLastCheckpoint(result);
        }
        
        private System.IAsyncResult OnBeginLoadLastCheckpoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadLastCheckpoint(callback, asyncState);
        }
        
        private object[] OnEndLoadLastCheckpoint(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadLastCheckpoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadLastCheckpointCompleted(object state) {
            if ((this.LoadLastCheckpointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadLastCheckpointCompleted(this, new LoadLastCheckpointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadLastCheckpointAsync() {
            this.LoadLastCheckpointAsync(null);
        }
        
        public void LoadLastCheckpointAsync(object userState) {
            if ((this.onBeginLoadLastCheckpointDelegate == null)) {
                this.onBeginLoadLastCheckpointDelegate = new BeginOperationDelegate(this.OnBeginLoadLastCheckpoint);
            }
            if ((this.onEndLoadLastCheckpointDelegate == null)) {
                this.onEndLoadLastCheckpointDelegate = new EndOperationDelegate(this.OnEndLoadLastCheckpoint);
            }
            if ((this.onLoadLastCheckpointCompletedDelegate == null)) {
                this.onLoadLastCheckpointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadLastCheckpointCompleted);
            }
            base.InvokeAsync(this.onBeginLoadLastCheckpointDelegate, null, this.onEndLoadLastCheckpointDelegate, this.onLoadLastCheckpointCompletedDelegate, userState);
        }
        
        public void SaveLastCheckpoint(byte[] checkpointBuilder) {
            base.Channel.SaveLastCheckpoint(checkpointBuilder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveLastCheckpoint(byte[] checkpointBuilder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveLastCheckpoint(checkpointBuilder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveLastCheckpoint(System.IAsyncResult result) {
            base.Channel.EndSaveLastCheckpoint(result);
        }
        
        private System.IAsyncResult OnBeginSaveLastCheckpoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] checkpointBuilder = ((byte[])(inValues[0]));
            return this.BeginSaveLastCheckpoint(checkpointBuilder, callback, asyncState);
        }
        
        private object[] OnEndSaveLastCheckpoint(System.IAsyncResult result) {
            this.EndSaveLastCheckpoint(result);
            return null;
        }
        
        private void OnSaveLastCheckpointCompleted(object state) {
            if ((this.SaveLastCheckpointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveLastCheckpointCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveLastCheckpointAsync(byte[] checkpointBuilder) {
            this.SaveLastCheckpointAsync(checkpointBuilder, null);
        }
        
        public void SaveLastCheckpointAsync(byte[] checkpointBuilder, object userState) {
            if ((this.onBeginSaveLastCheckpointDelegate == null)) {
                this.onBeginSaveLastCheckpointDelegate = new BeginOperationDelegate(this.OnBeginSaveLastCheckpoint);
            }
            if ((this.onEndSaveLastCheckpointDelegate == null)) {
                this.onEndSaveLastCheckpointDelegate = new EndOperationDelegate(this.OnEndSaveLastCheckpoint);
            }
            if ((this.onSaveLastCheckpointCompletedDelegate == null)) {
                this.onSaveLastCheckpointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveLastCheckpointCompleted);
            }
            base.InvokeAsync(this.onBeginSaveLastCheckpointDelegate, new object[] {
                        checkpointBuilder}, this.onEndSaveLastCheckpointDelegate, this.onSaveLastCheckpointCompletedDelegate, userState);
        }
        
        public byte[] LoadSandbox(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, System.Nullable<int> clientSectorVersion) {
            return base.Channel.LoadSandbox(sectorPosition, userId, clientSectorVersion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadSandbox(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, System.Nullable<int> clientSectorVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadSandbox(sectorPosition, userId, clientSectorVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadSandbox(System.IAsyncResult result) {
            return base.Channel.EndLoadSandbox(result);
        }
        
        private System.IAsyncResult OnBeginLoadSandbox(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition = ((MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int)(inValues[0]));
            System.Nullable<int> userId = ((System.Nullable<int>)(inValues[1]));
            System.Nullable<int> clientSectorVersion = ((System.Nullable<int>)(inValues[2]));
            return this.BeginLoadSandbox(sectorPosition, userId, clientSectorVersion, callback, asyncState);
        }
        
        private object[] OnEndLoadSandbox(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadSandbox(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadSandboxCompleted(object state) {
            if ((this.LoadSandboxCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadSandboxCompleted(this, new LoadSandboxCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadSandboxAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, System.Nullable<int> clientSectorVersion) {
            this.LoadSandboxAsync(sectorPosition, userId, clientSectorVersion, null);
        }
        
        public void LoadSandboxAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> userId, System.Nullable<int> clientSectorVersion, object userState) {
            if ((this.onBeginLoadSandboxDelegate == null)) {
                this.onBeginLoadSandboxDelegate = new BeginOperationDelegate(this.OnBeginLoadSandbox);
            }
            if ((this.onEndLoadSandboxDelegate == null)) {
                this.onEndLoadSandboxDelegate = new EndOperationDelegate(this.OnEndLoadSandbox);
            }
            if ((this.onLoadSandboxCompletedDelegate == null)) {
                this.onLoadSandboxCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadSandboxCompleted);
            }
            base.InvokeAsync(this.onBeginLoadSandboxDelegate, new object[] {
                        sectorPosition,
                        userId,
                        clientSectorVersion}, this.onEndLoadSandboxDelegate, this.onLoadSandboxCompletedDelegate, userState);
        }
        
        public byte[] LoadStoryEditor(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition) {
            return base.Channel.LoadStoryEditor(sectorPosition);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadStoryEditor(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadStoryEditor(sectorPosition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadStoryEditor(System.IAsyncResult result) {
            return base.Channel.EndLoadStoryEditor(result);
        }
        
        private System.IAsyncResult OnBeginLoadStoryEditor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition = ((MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int)(inValues[0]));
            return this.BeginLoadStoryEditor(sectorPosition, callback, asyncState);
        }
        
        private object[] OnEndLoadStoryEditor(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadStoryEditor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadStoryEditorCompleted(object state) {
            if ((this.LoadStoryEditorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadStoryEditorCompleted(this, new LoadStoryEditorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadStoryEditorAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition) {
            this.LoadStoryEditorAsync(sectorPosition, null);
        }
        
        public void LoadStoryEditorAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, object userState) {
            if ((this.onBeginLoadStoryEditorDelegate == null)) {
                this.onBeginLoadStoryEditorDelegate = new BeginOperationDelegate(this.OnBeginLoadStoryEditor);
            }
            if ((this.onEndLoadStoryEditorDelegate == null)) {
                this.onEndLoadStoryEditorDelegate = new EndOperationDelegate(this.OnEndLoadStoryEditor);
            }
            if ((this.onLoadStoryEditorCompletedDelegate == null)) {
                this.onLoadStoryEditorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadStoryEditorCompleted);
            }
            base.InvokeAsync(this.onBeginLoadStoryEditorDelegate, new object[] {
                        sectorPosition}, this.onEndLoadStoryEditorDelegate, this.onLoadStoryEditorCompletedDelegate, userState);
        }
        
        public void SaveStoryEditor(byte[] sectorObjectBuilder) {
            base.Channel.SaveStoryEditor(sectorObjectBuilder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveStoryEditor(byte[] sectorObjectBuilder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveStoryEditor(sectorObjectBuilder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveStoryEditor(System.IAsyncResult result) {
            base.Channel.EndSaveStoryEditor(result);
        }
        
        private System.IAsyncResult OnBeginSaveStoryEditor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] sectorObjectBuilder = ((byte[])(inValues[0]));
            return this.BeginSaveStoryEditor(sectorObjectBuilder, callback, asyncState);
        }
        
        private object[] OnEndSaveStoryEditor(System.IAsyncResult result) {
            this.EndSaveStoryEditor(result);
            return null;
        }
        
        private void OnSaveStoryEditorCompleted(object state) {
            if ((this.SaveStoryEditorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveStoryEditorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveStoryEditorAsync(byte[] sectorObjectBuilder) {
            this.SaveStoryEditorAsync(sectorObjectBuilder, null);
        }
        
        public void SaveStoryEditorAsync(byte[] sectorObjectBuilder, object userState) {
            if ((this.onBeginSaveStoryEditorDelegate == null)) {
                this.onBeginSaveStoryEditorDelegate = new BeginOperationDelegate(this.OnBeginSaveStoryEditor);
            }
            if ((this.onEndSaveStoryEditorDelegate == null)) {
                this.onEndSaveStoryEditorDelegate = new EndOperationDelegate(this.OnEndSaveStoryEditor);
            }
            if ((this.onSaveStoryEditorCompletedDelegate == null)) {
                this.onSaveStoryEditorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveStoryEditorCompleted);
            }
            base.InvokeAsync(this.onBeginSaveStoryEditorDelegate, new object[] {
                        sectorObjectBuilder}, this.onEndSaveStoryEditorDelegate, this.onSaveStoryEditorCompletedDelegate, userState);
        }
        
        public byte[] LoadSandboxEditor(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion) {
            return base.Channel.LoadSandboxEditor(sectorPosition, clientSectorVersion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadSandboxEditor(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadSandboxEditor(sectorPosition, clientSectorVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadSandboxEditor(System.IAsyncResult result) {
            return base.Channel.EndLoadSandboxEditor(result);
        }
        
        private System.IAsyncResult OnBeginLoadSandboxEditor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition = ((MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int)(inValues[0]));
            System.Nullable<int> clientSectorVersion = ((System.Nullable<int>)(inValues[1]));
            return this.BeginLoadSandboxEditor(sectorPosition, clientSectorVersion, callback, asyncState);
        }
        
        private object[] OnEndLoadSandboxEditor(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadSandboxEditor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadSandboxEditorCompleted(object state) {
            if ((this.LoadSandboxEditorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadSandboxEditorCompleted(this, new LoadSandboxEditorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadSandboxEditorAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion) {
            this.LoadSandboxEditorAsync(sectorPosition, clientSectorVersion, null);
        }
        
        public void LoadSandboxEditorAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion, object userState) {
            if ((this.onBeginLoadSandboxEditorDelegate == null)) {
                this.onBeginLoadSandboxEditorDelegate = new BeginOperationDelegate(this.OnBeginLoadSandboxEditor);
            }
            if ((this.onEndLoadSandboxEditorDelegate == null)) {
                this.onEndLoadSandboxEditorDelegate = new EndOperationDelegate(this.OnEndLoadSandboxEditor);
            }
            if ((this.onLoadSandboxEditorCompletedDelegate == null)) {
                this.onLoadSandboxEditorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadSandboxEditorCompleted);
            }
            base.InvokeAsync(this.onBeginLoadSandboxEditorDelegate, new object[] {
                        sectorPosition,
                        clientSectorVersion}, this.onEndLoadSandboxEditorDelegate, this.onLoadSandboxEditorCompletedDelegate, userState);
        }
        
        public void SaveSandboxEditor(byte[] sectorObjectBuilder) {
            base.Channel.SaveSandboxEditor(sectorObjectBuilder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveSandboxEditor(byte[] sectorObjectBuilder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveSandboxEditor(sectorObjectBuilder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveSandboxEditor(System.IAsyncResult result) {
            base.Channel.EndSaveSandboxEditor(result);
        }
        
        private System.IAsyncResult OnBeginSaveSandboxEditor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] sectorObjectBuilder = ((byte[])(inValues[0]));
            return this.BeginSaveSandboxEditor(sectorObjectBuilder, callback, asyncState);
        }
        
        private object[] OnEndSaveSandboxEditor(System.IAsyncResult result) {
            this.EndSaveSandboxEditor(result);
            return null;
        }
        
        private void OnSaveSandboxEditorCompleted(object state) {
            if ((this.SaveSandboxEditorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveSandboxEditorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveSandboxEditorAsync(byte[] sectorObjectBuilder) {
            this.SaveSandboxEditorAsync(sectorObjectBuilder, null);
        }
        
        public void SaveSandboxEditorAsync(byte[] sectorObjectBuilder, object userState) {
            if ((this.onBeginSaveSandboxEditorDelegate == null)) {
                this.onBeginSaveSandboxEditorDelegate = new BeginOperationDelegate(this.OnBeginSaveSandboxEditor);
            }
            if ((this.onEndSaveSandboxEditorDelegate == null)) {
                this.onEndSaveSandboxEditorDelegate = new EndOperationDelegate(this.OnEndSaveSandboxEditor);
            }
            if ((this.onSaveSandboxEditorCompletedDelegate == null)) {
                this.onSaveSandboxEditorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveSandboxEditorCompleted);
            }
            base.InvokeAsync(this.onBeginSaveSandboxEditorDelegate, new object[] {
                        sectorObjectBuilder}, this.onEndSaveSandboxEditorDelegate, this.onSaveSandboxEditorCompletedDelegate, userState);
        }
        
        public byte[] LoadSector() {
            return base.Channel.LoadSector();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadSector(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadSector(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadSector(System.IAsyncResult result) {
            return base.Channel.EndLoadSector(result);
        }
        
        private System.IAsyncResult OnBeginLoadSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoadSector(callback, asyncState);
        }
        
        private object[] OnEndLoadSector(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadSector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadSectorCompleted(object state) {
            if ((this.LoadSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadSectorCompleted(this, new LoadSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadSectorAsync() {
            this.LoadSectorAsync(null);
        }
        
        public void LoadSectorAsync(object userState) {
            if ((this.onBeginLoadSectorDelegate == null)) {
                this.onBeginLoadSectorDelegate = new BeginOperationDelegate(this.OnBeginLoadSector);
            }
            if ((this.onEndLoadSectorDelegate == null)) {
                this.onEndLoadSectorDelegate = new EndOperationDelegate(this.OnEndLoadSector);
            }
            if ((this.onLoadSectorCompletedDelegate == null)) {
                this.onLoadSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadSectorCompleted);
            }
            base.InvokeAsync(this.onBeginLoadSectorDelegate, null, this.onEndLoadSectorDelegate, this.onLoadSectorCompletedDelegate, userState);
        }
        
        public byte[] Travel(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, System.Nullable<int> clientSectorVersion) {
            return base.Channel.Travel(targetSector, clientSectorVersion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTravel(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, System.Nullable<int> clientSectorVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTravel(targetSector, clientSectorVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndTravel(System.IAsyncResult result) {
            return base.Channel.EndTravel(result);
        }
        
        private System.IAsyncResult OnBeginTravel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector = ((MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int)(inValues[0]));
            System.Nullable<int> clientSectorVersion = ((System.Nullable<int>)(inValues[1]));
            return this.BeginTravel(targetSector, clientSectorVersion, callback, asyncState);
        }
        
        private object[] OnEndTravel(System.IAsyncResult result) {
            byte[] retVal = this.EndTravel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTravelCompleted(object state) {
            if ((this.TravelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TravelCompleted(this, new TravelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TravelAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, System.Nullable<int> clientSectorVersion) {
            this.TravelAsync(targetSector, clientSectorVersion, null);
        }
        
        public void TravelAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int targetSector, System.Nullable<int> clientSectorVersion, object userState) {
            if ((this.onBeginTravelDelegate == null)) {
                this.onBeginTravelDelegate = new BeginOperationDelegate(this.OnBeginTravel);
            }
            if ((this.onEndTravelDelegate == null)) {
                this.onEndTravelDelegate = new EndOperationDelegate(this.OnEndTravel);
            }
            if ((this.onTravelCompletedDelegate == null)) {
                this.onTravelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTravelCompleted);
            }
            base.InvokeAsync(this.onBeginTravelDelegate, new object[] {
                        targetSector,
                        clientSectorVersion}, this.onEndTravelDelegate, this.onTravelCompletedDelegate, userState);
        }
        
        public byte[] LoadSectorGroups(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion) {
            return base.Channel.LoadSectorGroups(sectorPosition, clientSectorVersion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadSectorGroups(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadSectorGroups(sectorPosition, clientSectorVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndLoadSectorGroups(System.IAsyncResult result) {
            return base.Channel.EndLoadSectorGroups(result);
        }
        
        private System.IAsyncResult OnBeginLoadSectorGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition = ((MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int)(inValues[0]));
            System.Nullable<int> clientSectorVersion = ((System.Nullable<int>)(inValues[1]));
            return this.BeginLoadSectorGroups(sectorPosition, clientSectorVersion, callback, asyncState);
        }
        
        private object[] OnEndLoadSectorGroups(System.IAsyncResult result) {
            byte[] retVal = this.EndLoadSectorGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadSectorGroupsCompleted(object state) {
            if ((this.LoadSectorGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadSectorGroupsCompleted(this, new LoadSectorGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadSectorGroupsAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion) {
            this.LoadSectorGroupsAsync(sectorPosition, clientSectorVersion, null);
        }
        
        public void LoadSectorGroupsAsync(MinerWars.CommonLIB.AppCode.Utils.MyMwcVector3Int sectorPosition, System.Nullable<int> clientSectorVersion, object userState) {
            if ((this.onBeginLoadSectorGroupsDelegate == null)) {
                this.onBeginLoadSectorGroupsDelegate = new BeginOperationDelegate(this.OnBeginLoadSectorGroups);
            }
            if ((this.onEndLoadSectorGroupsDelegate == null)) {
                this.onEndLoadSectorGroupsDelegate = new EndOperationDelegate(this.OnEndLoadSectorGroups);
            }
            if ((this.onLoadSectorGroupsCompletedDelegate == null)) {
                this.onLoadSectorGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadSectorGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginLoadSectorGroupsDelegate, new object[] {
                        sectorPosition,
                        clientSectorVersion}, this.onEndLoadSectorGroupsDelegate, this.onLoadSectorGroupsCompletedDelegate, userState);
        }
    }
}
